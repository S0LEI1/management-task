"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Check = void 0;
const bad_request_error_1 = require("../errors/bad-request-error");
const user_type_1 = require("../events/types/user_type");
class Check {
    static isManager(type, permissions, requirePermission) {
        const isPermission = requirePermission.every((per) => permissions.includes(per));
        if (type === user_type_1.UserType.Manager)
            if (isPermission)
                return true;
        return false;
    }
    static checkTypeAndPermission(type, checkType, permissions, requirePermission) {
        const isPermission = requirePermission.every((per) => permissions.includes(per));
        if (type === checkType)
            if (isPermission)
                return true;
        return false;
    }
    static checkExcel(file) {
        if (!file)
            throw new bad_request_error_1.BadRequestError('File excel must be provided');
        if (file.mimetype !=
            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {
            throw new bad_request_error_1.BadRequestError('File Excel invalid');
        }
    }
}
exports.Check = Check;
Check.checkImage = (file) => {
    const { mimetype } = file;
    if (mimetype !== 'image/jpeg' && mimetype !== 'image/png') {
        throw new bad_request_error_1.BadRequestError('Image invalid');
    }
};
